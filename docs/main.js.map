{"version":3,"sources":["./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"container\">\n    <form\n        class=\"register\"\n        [formGroup]=\"registerForm\">\n\n        <h2>Register Account</h2>\n        <p>Portal</p>\n\n        <input \n            type=\"text\" \n            formControlName=\"email\" \n            placeholder=\"Email\"\n        >\n\n        <input \n            type=\"text\" \n            formControlName=\"password\"\n            placeholder=\"Password\"\n        >\n\n        <input \n            type=\"text\" \n            formControlName=\"password2\"\n            placeholder=\"Retype Password\"\n        >\n        \n        <button (click)=\"onClickRegister()\">Register</button>\n\n        <a \n            class=\"message\"\n            *ngIf=\"showLengthMessage\"\n            href=\"#\">The password must be atleast 8 characters long\n        </a>\n\n        <p \n            class=\"message\"\n            *ngIf=\"showMatchMessage\"\n            href=\"#\">The passwords don't match\n        </p>\n\n        <button \n            class=\"switchBtn\"\n            routerLinkActive=\"active\"\n            [routerLink]=\"['/sign-in']\">\n            Sign in\n        </button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  public registerForm: FormGroup;\n  public showLengthMessage: boolean = false;\n  public showMatchMessage: boolean = false;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService) {\n      this.registerForm = this.formBuilder.group(\n        {email: [''], password: [''], password2: ['']}\n      );\n    }\n\n  ngOnInit() {\n    this.registerForm.valueChanges.subscribe((e) => {\n      if(e.password.length < 8) {\n        this.showLengthMessage = true;\n      } else {\n        this.showLengthMessage = false;\n      };\n      if(e.password != e.password2) {\n        this.showMatchMessage =true;\n      } else {\n        this.showMatchMessage = false;\n      }\n    })\n  }\n\n  async onClickRegister() {\n    if(this.showLengthMessage == false \n      && this.showMatchMessage == false\n      && this.registerForm.value.email != ''\n      && this.registerForm.value.password != '') {\n        // console.log(this.registerForm.value.email)  \n        const token = await this.authService.register(this.registerForm.value)\n        localStorage.setItem('jwt', token)\n        // console.log(token)\n\n    } else {\n      alert('Invalid credentials')\n    }\n  };\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\n  <div class=\"header\">\n    <div class=\"content\">\n      <img src=\"assets/images/Image 13.png\" alt=\"Mission Graduates Logo\">\n      <p>Member Portal</p>\n    </div>\n  </div>\n\n  <div class=\"body\">\n\n    <mat-card class=\"members-card\">\n\n      <mat-card-header>\n        <mat-card-title id=\"members-card-title\">\n          Members\n        </mat-card-title>\n      </mat-card-header>\n\n      <mat-divider inset></mat-divider>\n\n      <div id=\"members-items\">\n        <mat-card-header>\n          <div mat-card-avatar class=\"members-header-image1 members-item\"></div>\n          <mat-card-title>Edward Kaufman</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-header>\n          <div mat-card-avatar class=\"members-header-image2 members-item\"></div>\n          <mat-card-title>Robert Benavidez</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-header>\n          <div mat-card-avatar class=\"members-header-image3 members-item\"></div>\n          <mat-card-title>Natalie Guandique</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-header>\n          <div mat-card-avatar class=\"members-header-image4 members-item\"></div>\n          <mat-card-title>Catherine Marroquin</mat-card-title>\n        </mat-card-header>\n\n        <p class=\"link members-item\">View all board members</p>\n\n      </div>\n    </mat-card>\n\n    <mat-card class=\"committees-card\">\n\n      <mat-card-header>\n        <mat-card-title id=\"committees-card-title\">\n          Committees\n        </mat-card-title>\n      </mat-card-header>\n\n      <mat-divider inset></mat-divider>\n    </mat-card>\n\n\n\n\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error-page works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\n\nexport class SignInComponent implements OnInit {\n  public loginForm: FormGroup;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router) {\n    this.loginForm = this.formBuilder.group(\n      {email: [''], password: ['']}\n    );\n    }\n\n  ngOnInit(): void {\n  }\n\n  async onClickLogin() {\n    const input = await this.authService.login(this.loginForm.value)\n    // console.log(token)\n    // console.log(token == true)\n    if (input.token) {\n      localStorage.setItem('jwt', input.token)\n      this.router.navigate(['/main']);\n      // console.log('hi')\n    } else {\n      alert('invalid')\n    }\n  }\n\n}","<div class=\"container\">\n    <form\n        class=\"login\"\n        [formGroup]=\"loginForm\">\n\n        <h2>Sign In</h2>\n        <p>Portal</p>\n\n        <input \n            type=\"text\" \n            formControlName=\"email\" \n            placeholder=\"Email\">\n\n        <input \n            type=\"text\" \n            formControlName=\"password\"\n            placeholder=\"Password\">\n\n        <button \n            (click)=\"onClickLogin()\"\n        >Sign in</button>\n\n        <a href=\"#\">I forgot my password</a>\n\n        <button \n            class=\"switchBtn\"\n            routerLinkActive=\"active\"\n            [routerLink]=\"['/register']\">\n            Register\n        </button>\n    </form>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web-portal-front';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HomeModule } from './home/home.module';\n\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    RegisterComponent,\n    ErrorPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private readonly http: HttpClient) { }\n\n  async login(body): Promise<any> {\n    const res = await this.req('post','http://localhost:5000/login', body);\n    // console.log(res)\n    return res;\n  }\n\n  async register(body): Promise<any> {\n    const res = await this.req('post','http://localhost:5000/register', body);\n    return res;\n  }\n\n  async req(method: string, url: string, body?: any): Promise<any> {\n    if (body) {\n      return this.http[method](url, body, {}).toPromise().catch(err => console.log(err));\n    } else {\n      return this.http[method](url, {}).toPromise().catch(err => console.log(err));\n    }\n  }\n\n  \n\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { RegisterComponent } from \"./register/register.component\";\nimport { SignInComponent } from \"./sign-in/sign-in.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { ErrorPageComponent } from \"./error-page/error-page.component\";\n\n\nconst appRoutes: Routes = [\n    {path: 'sign-in', component: SignInComponent},\n    {path: 'register', component: RegisterComponent},\n    {path: 'home', component: HomeComponent},\n    {path: 'main',\n        loadChildren: () => import('./main/main.module').then( m => m.MainModule)\n    },\n    // {path: '**', component: ErrorPageComponent},\n    {path: '**', redirectTo: 'sign-in'}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
